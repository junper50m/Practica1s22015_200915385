/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author JP
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fondo = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Fondo.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        jButton1.setText("Jugar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(303, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Thread hilo;

        Runnable hiloFor = new Runnable() {

            @Override
            public void run() {
                Thread actual = Thread.currentThread();
                synchronized (actual) {
                    for (int i = 0; i < 50; i++) {
                        LinX(i, 50, 50, 50);
                        /*try {
                            actual.wait(1);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                        }*/
                    }
                    for (int i = 0; i < 50; i++) {
                        LinYY(i, 50, 100, 50);
                      /*  try {
                            actual.wait(1);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                        }*/
                    }
                    for (int i = 0; i < 50; i++) {
                        LinXX(i, 50, 100, 100);
                        /*try {
                            actual.wait(1);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                        }*/
                    }
                    for (int i = 0; i < 50; i++) {
                        LinY(i, 50, 50, 100);
                       /* try {
                            actual.wait(1);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                        }*/
                    }

                }
            }
        };

        hilo = new Thread(hiloFor);
        hilo.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void LinX(int i, int f, int x, int y) {

        
            JPanel p0 = new JPanel();
            p0.setBackground(new Color(0, 0, 150));
            p0.setBounds(x + i, y, 1, 1);
            Fondo.add(p0);

            if(i < f-2)
            {
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x + i +1, y + 1, 1, 1);
                Fondo.add(p1);    
            }else{
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x + i -1, y + 1, 1, 1);
                Fondo.add(p1);
            }
                

            if(i < f-4)
            {
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x + i+2, y + 2, 1, 1);
                Fondo.add(p2);
            }else{
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x + i -2, y + 2, 1, 1);
                Fondo.add(p2);
            }

            
            if(i < f-6)
            {
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x + i +3, y + 3, 1, 1);
                Fondo.add(p3);
            }else{
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x + i-3, y + 3, 1, 1);
                Fondo.add(p3);
            }
               
            if(i < f-8)
            {
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x + i +4, y + 4, 1, 1);
                Fondo.add(p4);
            }else{
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x + i-4, y + 4, 1, 1);
                Fondo.add(p4);
            }

            if(i < f-10)
            {
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x + i+5, y + 5, 1, 1);
                Fondo.add(p5);
            }else{
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x + i-5, y + 5, 1, 1);
                Fondo.add(p5);
            }
                
            if(i < f-12)
            {
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x + i +6, y + 6, 1, 1);
                Fondo.add(p6);
            }else{
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x + i -6, y + 6, 1, 1);
                Fondo.add(p6);
            }
                
            Fondo.repaint();
        
        //Fondo.updateUI();    

    }

    public void LinY(int i, int f, int x, int y) {

            JPanel p0 = new JPanel();
            p0.setBackground(new Color(0, 0, 150));
            p0.setBounds(x, y-i, 1, 1);
            Fondo.add(p0);

            
            if(i < f-2)
            {
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x +1, y - i -1, 1, 1);
                Fondo.add(p1);    
            }else{
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x + 1, y - i +1, 1, 1);
                Fondo.add(p1);
            }
                
       
            if(i < f-4)
            {
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x +2, y - i-2, 1, 1);
                Fondo.add(p2);
            }else{
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x+2, y  - i +2, 1, 1);
                Fondo.add(p2);
            }

            
            if(i < f-6)
            {
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x+3 , y - i -3, 1, 1);
                Fondo.add(p3);
            }else{
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x +3, y - i+3, 1, 1);
                Fondo.add(p3);
            }
          
        
            if(i < f-8)
            {
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x +4, y - i -4, 1, 1);
                Fondo.add(p4);
            }else{
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x +4, y - i+4, 1, 1);
                Fondo.add(p4);
            }

       
        
            if(i < f-10)
            {
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x +5 , y - i-5, 1, 1);
                Fondo.add(p5);
            }else{
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x +5, y - i+5, 1, 1);
                Fondo.add(p5);
            }
            
                
            if(i < f-12)
            {
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x+6 , y - i -6, 1, 1);
                Fondo.add(p6);
            }else{
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x +6, y - i +6, 1, 1);
                Fondo.add(p6);
            }
                
            Fondo.repaint();
            
        
        
        //Fondo.updateUI();    

    }
    
    public void LinXX(int i, int f, int x, int y) {

        
            JPanel p0 = new JPanel();
            p0.setBackground(new Color(0, 0, 150));
            p0.setBounds(x - i, y, 1, 1);
            Fondo.add(p0);

            if(i < f-2)
            {
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x - i -1, y - 1, 1, 1);
                Fondo.add(p1);    
            }else{
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x - i +1, y - 1, 1, 1);
                Fondo.add(p1);
            }
                

            if(i < f-4)
            {
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x - i-2, y - 2, 1, 1);
                Fondo.add(p2);
            }else{
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x - i +2, y - 2, 1, 1);
                Fondo.add(p2);
            }

            
            if(i < f-6)
            {
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x - i -3, y - 3, 1, 1);
                Fondo.add(p3);
            }else{
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x - i+3, y - 3, 1, 1);
                Fondo.add(p3);
            }
               
            if(i < f-8)
            {
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x - i -4, y - 4, 1, 1);
                Fondo.add(p4);
            }else{
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x - i+4, y - 4, 1, 1);
                Fondo.add(p4);
            }

            if(i < f-10)
            {
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x - i-5, y - 5, 1, 1);
                Fondo.add(p5);
            }else{
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x - i+5, y - 5, 1, 1);
                Fondo.add(p5);
            }
                
            if(i < f-12)
            {
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x - i -6, y - 6, 1, 1);
                Fondo.add(p6);
            }else{
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x - i +6, y - 6, 1, 1);
                Fondo.add(p6);
            }
                
            Fondo.repaint();
        
        //Fondo.updateUI();    

    }

    public void LinYY(int i, int f, int x, int y) {

            JPanel p0 = new JPanel();
            p0.setBackground(new Color(0, 0, 150));
            p0.setBounds(x, y+i, 1, 1);
            Fondo.add(p0);

            
            if(i < f-2)
            {
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x -1, y + i +1, 1, 1);
                Fondo.add(p1);    
            }else{
                JPanel p1 = new JPanel();
                p1.setBackground(new Color(0, 100, 255));
                p1.setBounds(x - 1, y + i -1, 1, 1);
                Fondo.add(p1);
            }
                
       
            if(i < f-4)
            {
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x -2, y + i+2, 1, 1);
                Fondo.add(p2);
            }else{
                JPanel p2 = new JPanel();
                p2.setBackground(new Color(0, 200, 255));
                p2.setBounds(x-2, y  + i -2, 1, 1);
                Fondo.add(p2);
            }

            
            if(i < f-6)
            {
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x-3 , y + i +3, 1, 1);
                Fondo.add(p3);
            }else{
                JPanel p3 = new JPanel();
                p3.setBackground(new Color(0, 255, 255));
                p3.setBounds(x -3, y + i-3, 1, 1);
                Fondo.add(p3);
            }
          
        
            if(i < f-8)
            {
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x -4, y + i +4, 1, 1);
                Fondo.add(p4);
            }else{
                JPanel p4 = new JPanel();
                p4.setBackground(new Color(0, 200, 255));
                p4.setBounds(x -4, y + i-4, 1, 1);
                Fondo.add(p4);
            }

       
        
            if(i < f-10)
            {
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x -5 , y + i+5, 1, 1);
                Fondo.add(p5);
            }else{
                JPanel p5 = new JPanel();
                p5.setBackground(new Color(0, 100, 255));
                p5.setBounds(x -5, y + i-5, 1, 1);
                Fondo.add(p5);
            }
            
            
                
            if(i < f-12)
            {
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x-6 , y + i +6, 1, 1);
                Fondo.add(p6);
            }else{
                JPanel p6 = new JPanel();
                p6.setBackground(new Color(0, 0, 150));
                p6.setBounds(x -6, y + i -6, 1, 1);
                Fondo.add(p6);
            }
                
            Fondo.repaint();
            
        
        
        //Fondo.updateUI();    

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Fondo;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
